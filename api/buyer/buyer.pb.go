// Code generated by protoc-gen-go. DO NOT EDIT.
// source: buyer.proto

package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// GetBTCWallet
type GetBTCWalletReq struct {
	EthAddress           string   `protobuf:"bytes,1,opt,name=ethAddress" json:"ethAddress,omitempty"`
	BtcAddress           string   `protobuf:"bytes,2,opt,name=btcAddress" json:"btcAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBTCWalletReq) Reset()         { *m = GetBTCWalletReq{} }
func (m *GetBTCWalletReq) String() string { return proto.CompactTextString(m) }
func (*GetBTCWalletReq) ProtoMessage()    {}
func (*GetBTCWalletReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_buyer_3917f56539d22f0a, []int{0}
}
func (m *GetBTCWalletReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBTCWalletReq.Unmarshal(m, b)
}
func (m *GetBTCWalletReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBTCWalletReq.Marshal(b, m, deterministic)
}
func (dst *GetBTCWalletReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBTCWalletReq.Merge(dst, src)
}
func (m *GetBTCWalletReq) XXX_Size() int {
	return xxx_messageInfo_GetBTCWalletReq.Size(m)
}
func (m *GetBTCWalletReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBTCWalletReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBTCWalletReq proto.InternalMessageInfo

func (m *GetBTCWalletReq) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

func (m *GetBTCWalletReq) GetBtcAddress() string {
	if m != nil {
		return m.BtcAddress
	}
	return ""
}

type GetBTCWalletResp struct {
	BtcAddress           string   `protobuf:"bytes,1,opt,name=btcAddress" json:"btcAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBTCWalletResp) Reset()         { *m = GetBTCWalletResp{} }
func (m *GetBTCWalletResp) String() string { return proto.CompactTextString(m) }
func (*GetBTCWalletResp) ProtoMessage()    {}
func (*GetBTCWalletResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_buyer_3917f56539d22f0a, []int{1}
}
func (m *GetBTCWalletResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBTCWalletResp.Unmarshal(m, b)
}
func (m *GetBTCWalletResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBTCWalletResp.Marshal(b, m, deterministic)
}
func (dst *GetBTCWalletResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBTCWalletResp.Merge(dst, src)
}
func (m *GetBTCWalletResp) XXX_Size() int {
	return xxx_messageInfo_GetBTCWalletResp.Size(m)
}
func (m *GetBTCWalletResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBTCWalletResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetBTCWalletResp proto.InternalMessageInfo

func (m *GetBTCWalletResp) GetBtcAddress() string {
	if m != nil {
		return m.BtcAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*GetBTCWalletReq)(nil), "auth.GetBTCWalletReq")
	proto.RegisterType((*GetBTCWalletResp)(nil), "auth.GetBTCWalletResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	// Get BTC wallet by ETH wallet
	GetBTCWallet(ctx context.Context, in *GetBTCWalletReq, opts ...grpc.CallOption) (*GetBTCWalletResp, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) GetBTCWallet(ctx context.Context, in *GetBTCWalletReq, opts ...grpc.CallOption) (*GetBTCWalletResp, error) {
	out := new(GetBTCWalletResp)
	err := c.cc.Invoke(ctx, "/auth.Auth/GetBTCWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	// Get BTC wallet by ETH wallet
	GetBTCWallet(context.Context, *GetBTCWalletReq) (*GetBTCWalletResp, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_GetBTCWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBTCWalletReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).GetBTCWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/GetBTCWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).GetBTCWallet(ctx, req.(*GetBTCWalletReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBTCWallet",
			Handler:    _Auth_GetBTCWallet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "buyer.proto",
}

func init() { proto.RegisterFile("buyer.proto", fileDescriptor_buyer_3917f56539d22f0a) }

var fileDescriptor_buyer_3917f56539d22f0a = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2a, 0xad, 0x4c,
	0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x2c, 0x2d, 0xc9, 0x90, 0x92, 0x49,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49,
	0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xa8, 0x51, 0x0a, 0xe4, 0xe2, 0x77, 0x4f, 0x2d, 0x71, 0x0a,
	0x71, 0x0e, 0x4f, 0xcc, 0xc9, 0x49, 0x2d, 0x09, 0x4a, 0x2d, 0x14, 0x92, 0xe3, 0xe2, 0x4a, 0x2d,
	0xc9, 0x70, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42,
	0x12, 0x01, 0xc9, 0x27, 0x95, 0x24, 0xc3, 0xe4, 0x99, 0x20, 0xf2, 0x08, 0x11, 0x25, 0x23, 0x2e,
	0x01, 0x54, 0x23, 0x8b, 0x0b, 0xd0, 0xf4, 0x30, 0xa2, 0xeb, 0x31, 0x4a, 0xe2, 0x62, 0x71, 0x2c,
	0x2d, 0xc9, 0x10, 0x8a, 0xe2, 0xe2, 0x41, 0xd6, 0x2b, 0x24, 0xaa, 0x07, 0xf2, 0x83, 0x1e, 0x9a,
	0x13, 0xa5, 0xc4, 0xb0, 0x09, 0x17, 0x17, 0x28, 0x49, 0x37, 0x5d, 0x7e, 0x32, 0x99, 0x49, 0x54,
	0x49, 0x40, 0xbf, 0xcc, 0x50, 0x3f, 0x1d, 0x49, 0xd6, 0x8a, 0x51, 0x2b, 0x89, 0x0d, 0xec, 0x63,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xa5, 0xf2, 0x72, 0x24, 0x01, 0x00, 0x00,
}
